name: SonarCloud

on:
  push:
    branches:
      - master
      - dev
      - feat/*
      - hot/*
      - rel/*
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
    
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
   
      # - uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: '5.1.x'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      
      - name: Install JetBrains dotCover
        shell: powershell
        run: |
          dotnet tool install --global JetBrains.dotCover.GlobalTool
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"hsnsh_sonar-works" /o:"hsnsh" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths=TestResults/*.trx /d:sonar.cs.opencover.reportsPaths=TestResults/*/coverage.opencover.xml /d:sonar.coverage.exclusions="**Test*.cs" /d:sonar.verbose=false /d:sonar.sourceEncoding=UTF-8
          # Now restore packages and build everything.
          dotnet restore SnrSolution.sln
          dotnet build SnrSolution.sln --configuration release
          # dotnet test "./SnrTests/SnrTests.csproj" --collect:"Code Coverage" --configuration release -r ./TestResults --logger "trx;LogFileName=testoutput.trx"
          dotnet dotcover test "./SnrTests/SnrTests.csproj" --configuration release --dcReportType=HTML -r ./TestResults --logger "trx;LogFileName=testoutput.trx"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          # dotnet --version
          # dotnet tool restore
          # .\sonarcloud.ps1 -sonarSecret ${{ secrets.SONAR_TOKEN }}
